<?xml version="1.0" encoding="utf-8"?>
<!--
	AGORA - an interactive and web-based argument mapping tool that stimulates reasoning, 
			reflection, critique, deliberation, and creativity in individual argument construction 
			and in collaborative or adversarial settings. 
    Copyright (C) 2011 Georgia Institute of Technology

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as
    published by the Free Software Foundation, either version 3 of the
    License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->
<mx:Panel xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"  
		  preinitialize="setProperties();" 
		  creationComplete="init();"
		  keyDown="panel1_keyDownHandler(event)" xmlns:components="components.*" >

	<fx:Script>
		<![CDATA[
			protected function registrationNote_clickHandler(event:MouseEvent):void
			{
				var registrationNote:RegistrationNote = new RegistrationNote;
				PopUpManager.addPopUp(registrationNote, this.parent);
				PopUpManager.centerPopUp(registrationNote);
			}
		]]>
	</fx:Script>

	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<mx:EmailValidator id="emailValidator" 
						   source="{email}" property="text">
		</mx:EmailValidator>
		
		<mx:StringValidator id="firstnameValidator"
							source="{firstname}"
							property="text">			
		</mx:StringValidator>
		
		<mx:StringValidator id="lastnameValidator"
							source="{lastname}"
							property="text">
		</mx:StringValidator>
		
		<mx:StringValidator id="passwordValidator"
							source="{pass_hash}"
							property="text">
		</mx:StringValidator>
		
		<mx:StringValidator id="passwordDupValidator"
							source="{pass_hash_dup}"
							property="text">
		</mx:StringValidator>
		
		<mx:StringValidator id="usernameValidator"
							source="{username}"
							property="text">
		</mx:StringValidator>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import Controller.AGORAController;
			import Controller.UserSessionController;
			
			import Model.AGORAModel;
			
			import ValueObjects.AGORAParameters;
			import ValueObjects.UserDataVO;
			
			import classes.Configure;
			import classes.Language;
			
			import com.adobe.crypto.MD5;
			
			import mx.controls.Alert;
			import mx.events.ValidationResultEvent;
			import mx.managers.FocusManager;
			import mx.managers.PopUpManager;

			//import org.osmf.layout.AbsoluteLayoutFacet;
			
			private static var _salt:String = "AGORA";
			[Bindable]
			private var agoraConstants:AGORAParameters;
			
			public static function get salt():String{
				return _salt;
			}
				
			public function init():void
			{
			if(AGORAModel.getInstance().userSessionModel.loggedIn() || AGORAModel.getInstance().userSessionModel.username != "Guest"){
				UserSessionController.getInstance().pullRegistrationInfo();
			}
				focusManager.setFocus(username);
				agoraConstants = AGORAParameters.getInstance();
			}
			
			public function setProperties():void
			{
				title=Language.lookup("Register");
			}
			
			private function displayStatus(event:Event):void
			{
				var xml:XML = XML(event.target.data);
				if(xml.@created.length() == 0)
				{
					if( XMLList(xml.@exists).length() == 1){
						Alert.show(Language.lookup("RegisterFailed"));
					}
					else{
						Alert.show(xml.toXMLString());
					}
				}
				else if(xml.@created.length() == 1)
				{
					Alert.show(Language.lookup("RegisterSuccess"));
				}
				PopUpManager.removePopUp(this);
			}
			
			private function populateFields(event:Event):void{
				var xml:XML = XML(event.target.data);
				
			}
			
			public function errorHandler(event: IOErrorEvent):void
			{
				Alert.show(Language.lookup("CommunicationError"));
			}
			
			public function clear_form():void
			{
				PopUpManager.removePopUp(this);
			}
			
			public function submit_form():void
			{
				if(policyTermsRead.selected){			
					if( is13orOlder.selected ){
						if(pass_hash.text != pass_hash_dup.text)
						{
							Alert.show(Language.lookup("PassMismatch"));
							return;
						}
						
						var userDataVO:UserDataVO = new UserDataVO;
						userDataVO.firstName = firstname.text;
						userDataVO.lastName = lastname.text;
						userDataVO.userName = username.text;
						userDataVO.password = pass_hash.text;
						userDataVO.email = email.text;
						userDataVO.URL = url.text;
						userDataVO.URL = url.text;
						userDataVO.URL = url.text;
						
						var userSessionController:UserSessionController = UserSessionController.getInstance();
						userSessionController.register(userDataVO);
						}else{
							Alert.show(Language.lookup("RegistrationAgeError"));
						}
					}else{
						Alert.show(Language.lookup("MustAgree"));
							
				}
			}
			protected function emailValidator_invalidHandler(event:ValidationResultEvent):void
			{
				Alert.show(Language.lookup("EnterValidEmail"));
				email.text = "";
			}


			protected function panel1_keyDownHandler(event:KeyboardEvent):void
			{
				if(event.keyCode == Keyboard.ENTER){
					submit_form();
				}
			}

		]]>
		
	</fx:Script>
	<s:VGroup  horizontalAlign="center">
		
	<mx:Form id="form" >
		<mx:FormItem tabIndex="1" label="{Language.lookup(&quot;Username&quot;)}" required="true">
			<s:TextInput id="username">
			</s:TextInput>
		</mx:FormItem>
		<mx:FormItem label="{Language.lookup(&quot;Password&quot;)}" required="true">
			<s:TextInput id="pass_hash" tabIndex="2" displayAsPassword="true">
			</s:TextInput>
		</mx:FormItem>
		<mx:FormItem  label="{Language.lookup(&quot;PassRepeat&quot;)}" required="true" >
			<s:TextInput tabIndex="3" id="pass_hash_dup"  displayAsPassword="true">
			</s:TextInput>
		</mx:FormItem>
		<mx:FormItem label="{Language.lookup(&quot;FirstName&quot;)}" required="true">
			<s:TextInput tabIndex="4" id="firstname">
			</s:TextInput>
		</mx:FormItem>
		<mx:FormItem label="{Language.lookup(&quot;LastName&quot;)}" required="true">
			<s:TextInput tabIndex="5" id="lastname">
			</s:TextInput>
		</mx:FormItem>
		<mx:FormItem  label="{Language.lookup(&quot;Email&quot;)}" required="true">
			<s:TextInput tabIndex="6" id="email">
			</s:TextInput>
		</mx:FormItem>
		<mx:FormItem label="{Language.lookup(&quot;URL&quot;)}">
			<s:TextInput tabIndex="6" id="url">
			</s:TextInput>
		</mx:FormItem>
		<mx:FormItem label="{Language.lookup(&quot;URL&quot;)}">
			<s:TextInput tabIndex="7" id="url2">
			</s:TextInput>
		</mx:FormItem>
		<mx:FormItem label="{Language.lookup(&quot;URL&quot;)}">
			<s:TextInput tabIndex="8" id="url3">
			</s:TextInput>
		</mx:FormItem>
	</mx:Form>
		<s:HGroup >
			<s:CheckBox id = "policyTermsRead"  tabIndex="9"/>
			<s:Label textDecoration="underline" toolTip="{agoraConstants.REGISTRATION_NOTE}" text="{Language.lookup('ReadRegistrationNote')}" id="registrationNote" click="registrationNote_clickHandler(event)" width="200" />
		</s:HGroup>
		<s:HGroup>
			<s:CheckBox id = "is13orOlder" tabIndex="10"/>
			<s:Label  id="registrationAge" text="{Language.lookup('RegistrationAge')}" width="200" />
		</s:HGroup>
		<s:HGroup paddingBottom="30">
			<s:Button label="{Language.lookup(&quot;Submit&quot;)}" tabIndex="11" id="submit_btn" click="submit_form();">		
			</s:Button>
			<s:Button label="{Language.lookup(&quot;Back&quot;)}"  tabIndex="12" id="back_btn" click="clear_form();">		
			</s:Button>
		</s:HGroup >			
	</s:VGroup>

</mx:Panel>