<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 width="400" height="300">
	<fx:Script>
		<![CDATA[
			import Controller.AGORAController;
			import Controller.ArgumentController;
			
			import Model.AGORAModel;
			import Model.MapMetaData;
			
			import Skins.LeftAlignTextButtonSkin;
			
			import classes.Language;
			
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.graphics.SolidColorStroke;
			import mx.managers.PopUpManager;
			
			import spark.components.Button;
			import spark.components.HGroup;
			import spark.components.Label;
			import spark.primitives.Line;
			
			public var mapListXML:XML;
			public var mapMetaDataVector:Vector.<MapMetaData>;
			override protected function commitProperties():void{
				super.commitProperties();
				if(listMyMaps.numElements > 0){
					listMyMaps.removeAllElements();
				}	
				
				if(mapListXML && mapListXML.map)
					var maps:XMLList = mapListXML.map;
				mapMetaDataVector = new Vector.<MapMetaData>(0,false);
				
				for each(var map:XML in maps)
				{
					try{
						if(map.@is_deleted == "1")
						{
							continue;
						}
					}catch(error:Error){
						trace("is_deleted not available yet...");
					}
					
					var mapMetaData:MapMetaData = new MapMetaData();
					mapMetaData.mapID = map.@ID;
					mapMetaData.mapName = map.@title;
					mapMetaData.category = map.@category;
					mapMetaData.mapCreator = map.@creator;
					mapMetaData.firstname = map.@firstname;
					mapMetaData.lastname = map.@lastname;
					mapMetaData.url = map.@url;
					mapMetaDataVector.push(mapMetaData);
				}
				mapMetaDataVector.sort(MapMetaData.isGreater);
				var i:int = 0;
				AGORAModel.getInstance().myMapsModel.mapsCounter=mapMetaDataVector.length;;				
				for each( mapMetaData in mapMetaDataVector){

					/*Creates the button for the map to be added to the panel*/
					var myMap:MyMapName = new MyMapName;
					myMap.mapId = mapMetaData.mapID;
					myMap.mapName = mapMetaData.mapName;
					myMap.buttonID = i++.toString();
					myMap.percentHeight=100;

					var myCategory:Button = new Button;
					myCategory.label = mapMetaData.category;
					myCategory.id = mapMetaData.mapID.toString();
					myCategory.toolTip = Language.lookup("ClickToPublishMap");
					//myCategory.setStyle("skinClass",LeftAlignTextButtonSkin);
					myCategory.setStyle("chromeColor", 0xA0CADB);
					myCategory.addEventListener(MouseEvent.CLICK, function(e:MouseEvent):void{
						if(!FlexGlobals.topLevelApplication.publishMap){
							FlexGlobals.topLevelApplication.publishMap = new PublishMapPopUpPanel();
						}
						FlexGlobals.topLevelApplication.publishMap.mapID = parseInt(((Button)(e.target).id));

						AGORAModel.getInstance().publishMapModel.sendForTopLevel();
						PopUpManager.addPopUp(FlexGlobals.topLevelApplication.publishMap,FlexGlobals.topLevelApplication.agoraMenu,true);
						PopUpManager.centerPopUp(FlexGlobals.topLevelApplication.publishMap);
					},false,0);
					
					var temp:Label = new Label;
					temp.text = '\n' + Language.lookup('IsIn');
					temp.percentWidth = 10;
					temp.horizontalCenter = 0;
					temp.verticalCenter = 0;
					var horizMapGroup:HGroup = new HGroup;
					var horizAddDeleteMapsGroup:HGroup = new HGroup;
					myCategory.percentWidth = 40;
					myCategory.percentHeight = 100;	
					horizMapGroup.percentWidth = 100;
					
					horizMapGroup.addElement(myMap);
					horizMapGroup.addElement(temp);
					horizMapGroup.addElement(myCategory);
	

						
					listMyMaps.addElement(horizMapGroup);
				}
			}
			
			public function deleteMaps(event:MouseEvent):void{
				AGORAController.getInstance().deleteSelectedMaps();
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:Scroller percentHeight="100" percentWidth="100">
		<s:VGroup percentHeight="100" percentWidth="100" id="listMyMaps">
		</s:VGroup>
	</s:Scroller>
	
</s:Group>
