<?xml version="1.0" encoding="utf-8"?>
	<!--
	-	Author: Zach
	-	
	-	This mxml class gives a UI for joining a project. When created, this function sets the user's focus
	-	on the password field. Then, when any particular button is pressed, the corresponding event listener
	-	is called. See the corresponding FlexDoc for more info. 
	-->
<mx:Panel xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  width="176" height="132" creationComplete="init();" layout="absolute">
	
	<fx:Declarations>

	</fx:Declarations>
	
	<!--The submit button that submits the input password for verification-->
	<!--Text box allowing for password input-->
	<!--Instructive text field that tells the user what to do: input the password-->
	<s:Label x="10" y="5" text="Input the Project's Password"/>
	<!--Cancel button that closes the popup when pressed-->
	<s:TextInput id="password" x="23" y="25" displayAsPassword="true"/>
	<s:Button id="submitButton" x="10" y="70" label="Submit" click="submit_form()"/>
	<s:Button id="cancelButton" x="88" y="70" label="Back" click="clear_form()"/>
	<fx:Script>
		<![CDATA[
			import Model.AGORAModel;
			import Model.VerifyProjectPasswordModel;
			
			import com.adobe.crypto.MD5;
			
			import mx.core.Application;
			import mx.core.FlexGlobals;
			import mx.managers.FocusManager;
			import mx.managers.PopUpManager;
			
			/**
			 * Run when the object is instantiated. This sets focus to be the password field
			 */
			public function init():void
			{
				FlexGlobals.topLevelApplication.focusManager.setFocus(password);
			}
			
			/**
			 * When the cancel button is pressed this method is run. 
			 * 
			 * Gets rid of THIS popup.
			 */
			public function clear_form():void
			{
				PopUpManager.removePopUp(this);
			}
			
			/**
			 * When the submit button is pressed this method is run.
			 * 
			 * Removes the popup, hashes the input password and puts it into the correct place, then 
			 * sends the password to the database to be checked for correctness. See the FlexDoc in
			 * VerifyProjectPasswordModel for more info on what goes on when a password is verified.
			 */
			public function submit_form():void{
				PopUpManager.removePopUp(this);				
				AGORAModel.getInstance().agoraMapModel.projectPassword = MD5.hash(password.text);
				var verifyCorrectProject:VerifyProjectPasswordModel = new VerifyProjectPasswordModel;
				verifyCorrectProject.send();
			}
			
		]]>
	</fx:Script>

</mx:Panel>


