<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
<<<<<<< HEAD
		  xmlns:mx="library://ns.adobe.com/flex/mx" 
		  layout="absolute" 
		  width="400" height="300" 
		  preinitialize="setProperties();" 
		  creationComplete="init();"
		  keyDown="panel_keyDownHandler(event)">
=======
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  layout="absolute" width="400" height="300" creationComplete="init();">
>>>>>>> Architect
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<mx:StringValidator id="unameValidator"
							source="{username}"
							property="text">
		</mx:StringValidator>
		<mx:StringValidator id="passwordValidator"
							source="{pass_hash}"
							property="text">
		</mx:StringValidator>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import Controller.UserSessionController;
			
			import ValueObjects.UserDataVO;
			
			import classes.UserData;
			
			import mx.controls.Alert;
			import mx.managers.PopUpManager;
			import mx.validators.Validator;
			
			/*
			public function setProperties():void
			{
				title="Login";
			}
			
			private function displayStatus(event:Event):void
			{
				var xml:XML = XML(event.target.data);	
			}
			
			public function verifyLogin():void
			{
				if(UserData.isValid()){
					dispatchEvent(new Event("verification",true,false));				
				}
				else{
					Alert.show("Login Failed");
				}
				PopUpManager.removePopUp(this);
			}
			*/
			
			public function init():void
			{	
				focusManager.setFocus(username);
			}
			
			
			public function register_form():void
			{	
				var userSessionController:UserSessionController = UserSessionController.getInstance();
				userSessionController.showRegistrationBox();
			}
		
			public function clear_form():void
			{
				PopUpManager.removePopUp(this);
			}
			
			public function submit_form():void
			{
<<<<<<< HEAD
				var array:Array = new Array();
				array.push(unameValidator);
				array.push(passwordValidator);
				var errors:Array = Validator.validateAll(array);
				if(errors.length == 0){
					UserData.validateUser(username.text,pass_hash.text, this);
				}
				else{
					Alert.show("All fields are required.");
				}
				
			}

			protected function panel_keyDownHandler(event:KeyboardEvent):void
			{
				if(event.keyCode == Keyboard.ENTER){
					submit_form();
				}
=======
				var userDataVO:UserDataVO = new UserDataVO;
				userDataVO.userName = username.text;
				userDataVO.password = pass_hash.text;
				
				var userLoginController:UserSessionController = UserSessionController.getInstance();
				userLoginController.login(userDataVO);
				
			}
			
			protected function register_btn_clickHandler(event:MouseEvent):void
			{
				var userSessionController:UserSessionController = UserSessionController.getInstance();
				userSessionController.showRegistrationBox();
>>>>>>> Architect
			}

		]]>
		
	</fx:Script>
	<mx:Form id="form">
		<mx:FormItem label="Username">
			<s:TextInput id="username">
			</s:TextInput>
		</mx:FormItem>
		<mx:FormItem label="Password">
			<s:TextInput id="pass_hash" displayAsPassword="true">
			</s:TextInput>
		</mx:FormItem>
		<mx:FormItem>
			<s:HGroup>
				<s:Button label="Submit" id="submit_btn" click="submit_form();">		
				</s:Button>
				<s:Button label="Back" id="back_btn" click="clear_form();">		
				</s:Button>
				<s:Button label="Register" id="register_btn" click="register_btn_clickHandler(event)">		
				</s:Button>
			</s:HGroup>		
		</mx:FormItem>
		
	</mx:Form>
</mx:Panel>
