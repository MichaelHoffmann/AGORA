<?xml version="1.0" encoding="utf-8"?>
<!--
	AGORA - an interactive and web-based argument mapping tool that stimulates reasoning, 
			reflection, critique, deliberation, and creativity in individual argument construction 
			and in collaborative or adversarial settings. 
    Copyright (C) 2011 Georgia Institute of Technology

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as
    published by the Free Software Foundation, either version 3 of the
    License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->
<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx"
		   xmlns:classes="classes.*" xmlns:components="components.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:VGroup id="container" paddingBottom="10" paddingTop="10">			
		<s:HGroup id="topPanel" gap="10">
			<s:Button id="gotoMenuBtn" label="Home" width="150">
			</s:Button>
			<s:Button id="saveAsBtn" label="Save Map As" visible="true" width="150">
			</s:Button>
		</s:HGroup>
		<s:Scroller id="agora">	
			<s:Group>
				<mx:Canvas>
					<components:AgoraMap id="agoraMap" backgroundColor="0xffffff">	
						<mx:Canvas id="canvas" width="150" visible="false">
							<mx:Text width="150" height="140" id="helpTxt">
								<mx:htmlText>
									<![CDATA[<u>Support:</u><br /> <br />Keep in mind that a claim can be descriptive ("it is the case that â€¦") or normative (e.g., "we should do x")
									]]>
									<!-- Todo: how does syntax work for changing this? -->
								</mx:htmlText>
							</mx:Text>
						</mx:Canvas>
					</components:AgoraMap>	
				</mx:Canvas>
			</s:Group>
		</s:Scroller>
	</s:VGroup>
	
	<fx:Script>
		<![CDATA[
			import Controller.LayoutController;
			
			import classes.ClaimAddedEvent;
			import classes.Configure;
			import classes.GridPanel;
			import classes.Language;
			import classes.UserData;
			
			import flash.display.*;
			
			import mx.binding.utils.BindingUtils;
			import mx.controls.Alert;
			import mx.controls.Label;
			import mx.controls.Text;
			import mx.core.Application;
			import mx.core.FlexGlobals;
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			
			import spark.components.Group;
			import spark.primitives.Graphic;
			
			
			public var numComponentsX:int;
			public var numComponentsY:int;
			public var layoutManager:LayoutController;
			
			public function hideMap():void
			{
				var canvas:Canvas = Canvas(this.parent.getChildByName("agoraMenu"));
				canvas.visible = true;
				Group(this.parent).removeElement(this);
				FlexGlobals.topLevelApplication.loadMapList();
				FlexGlobals.topLevelApplication.loadMyMapList();
			}
			
			public function discardChanges(event:Event):void
			{
				hideMap();	
			}
			
			public function setWidth(event: Event):void
			{
				FlexGlobals.topLevelApplication.map.agora.height =  FlexGlobals.topLevelApplication.map.stage.stageHeight - FlexGlobals.topLevelApplication.map.topPanel.height - FlexGlobals.topLevelApplication.map.container.gap - 50;
				FlexGlobals.topLevelApplication.map.agora.width = FlexGlobals.topLevelApplication.map.stage.stageWidth - 50;
			}
			
			public function update():void{
				//agoraMap.enabled = false;
				var xml:XML;
				xml = agoraMap.getMapXml();
				if(xml.error.length > 0)
				{
					Alert.show("Error occurred in saving map");
					return;
				}	
				
				var urlRequestMap:URLRequest = new URLRequest;
				urlRequestMap.url = Configure.lookup("baseURL") + "insert.php";
				var urlRequestVarsMap:URLVariables = new URLVariables("uid="+UserData.uid+"&"+"pass_hash="+UserData.passHashStr+"&xml="+xml.toXMLString());
				urlRequestMap.data = urlRequestVarsMap;
				urlRequestMap.method = URLRequestMethod.GET;
				var urlLoaderMap:URLLoader = new URLLoader;
				urlLoaderMap.addEventListener(Event.COMPLETE, function (eventMap:Event):void{
					//agoraMap.enabled = true;
				});
				urlLoaderMap.load(urlRequestMap);
			}
			
			
			public function saveMap(event:MouseEvent):void
			{
				var xml:XML;
				xml = agoraMap.getMapXml();
				if(xml.error.length > 0)
				{
					Alert.show("Error occurred in saving map");
					hideMap();
					return;
				}	
				
				var urlRequestMap:URLRequest = new URLRequest;
				urlRequestMap.url = Configure.lookup("baseURL") + "insert.php";
				var urlRequestVarsMap:URLVariables = new URLVariables("uid="+UserData.uid+"&"+"pass_hash="+UserData.passHashStr+"&xml="+xml.toXMLString());
				urlRequestMap.data = urlRequestVarsMap;
				urlRequestMap.method = URLRequestMethod.GET;
				var urlLoaderMap:URLLoader = new URLLoader;
				urlLoaderMap.addEventListener(Event.COMPLETE, function (eventMap:Event):void{
					var retXMLMap:XML =  XML(eventMap.target.data);
					if( XMLList(retXMLMap.error).length() > 0){
						Alert.show(retXMLMap.error[0].@text);
					}
					hideMap();
				});
				urlLoaderMap.load(urlRequestMap);	
			}
			
			public function updateSize(event:Event):void
			{
				agora.height = stage.stageHeight - topPanel.height - container.gap - 10;
				agora.width = this.stage.stageWidth;
			}
			
			public function addEmptyArgument():void
			{
				addPanelToMap();
				this.addEventListener(ClaimAddedEvent.CLAIM_ADDED,function (event:ClaimAddedEvent):void{
					var argumentPanel:ArgumentPanel = event.argumentPanel;
					argumentPanel.addSupportingArgument();
					argumentPanel.addEventListener(ArgumentPanel.ARGUMENT_CONSTRUCTED,function (event:Event):void{
						argumentPanel.beginByArgument();
					});
				});
			}
			
			public function addPanelToMap():void
			{
				//map is given an id
				var xmlMap:XML = new XML("<map id=\"0\" title=\"" + FlexGlobals.topLevelApplication.presetMapName + "\" ></map>");
				var urlRequestMap:URLRequest = new URLRequest;
				urlRequestMap.url = Configure.lookup("baseURL") + "insert.php";
				var urlRequestVarsMap:URLVariables = new URLVariables("uid="+UserData.uid+"&"+"pass_hash="+UserData.passHashStr+"&xml="+xmlMap.toXMLString());
				urlRequestMap.data = urlRequestVarsMap;
				urlRequestMap.method = URLRequestMethod.GET;
				var urlLoaderMap:URLLoader = new URLLoader;
				urlLoaderMap.addEventListener(Event.COMPLETE, function (eventMap:Event):void{
					var retXMLMap:XML =  XML(eventMap.target.data);
					//Alert.show(retXMLMap.toXMLString());
					agoraMap.ID = retXMLMap.@ID;
					
					var urlRequest:URLRequest = new URLRequest;
					urlRequest.url = Configure.lookup("baseURL") + "insert.php";
					var urlRequestVars:URLVariables = new URLVariables("uid="+UserData.uid+"&"+"pass_hash="+UserData.passHashStr+"&xml="+agoraMap.getAP());
					urlRequest.data = urlRequestVars;
					urlRequest.method = URLRequestMethod.GET;
					var urlLoader:URLLoader = new URLLoader;
					urlLoader.addEventListener(Event.COMPLETE, function (event:Event):void{
						var xml:XML = XML(event.target.data);
						var argumentPanel:ArgumentPanel = new ArgumentPanel;
						//argumentPanel._initXML = xml;
						argumentPanel.gridX = 2;
						argumentPanel.gridY = 3;
						//argumentPanel.firstClaim = true;
						agoraMap.addChild(argumentPanel);
						agoraMap.layoutManager.registerPanel(argumentPanel);
						argumentPanel.addEventListener(FlexEvent.CREATION_COMPLETE,function(event:FlexEvent):void{
							dispatchEvent(new ClaimAddedEvent(ClaimAddedEvent.CLAIM_ADDED,argumentPanel,true,false));
						});
					});
					urlLoader.load(urlRequest);
				});
				urlLoaderMap.load(urlRequestMap);
			}
			
			
			public function addClaim():void 
			{
				addPanelToMap();
				this.addEventListener(ClaimAddedEvent.CLAIM_ADDED,function (event:ClaimAddedEvent):void{
					canvas.visible = true;
					var argumentPanel:ArgumentPanel = event.argumentPanel;
					argumentPanel.displayTxt.text  = Language.lookup("EnterClaim");
					argumentPanel.addEventListener("UserInteractionBegan",function(event:Event):void{canvas.visible=false;});
					canvas.setStyle("backgroundColor",uint("0x99FF99"));
					canvas.x = 25 * 3 + 250;
					canvas.y = 25 * 2;
					
				});
			}
			
			public function initApp():void
			{
				agora.height = this.stage.stageHeight - topPanel.height - container.gap - 10;
				agora.width = this.stage.stageWidth;
				this.stage.addEventListener(Event.RESIZE, updateSize);	
				agoraMap.addEventListener(Event.ADDED_TO_STAGE, setWidth);
				ArgumentPanel.parentMap = agoraMap;
				gotoMenuBtn.addEventListener(MouseEvent.CLICK,saveMap);
				//discardChangesBtn.addEventListener(MouseEvent.CLICK,discardChanges);			
				dispatchEvent(new Event("created",true,false));
			}
		]]>
	</fx:Script>
</mx:Canvas>
