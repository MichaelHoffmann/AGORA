<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 width="600" height="400"
		 creationComplete="panel_creationCompleteHandler(event)"
		 addedToStage="panel1_addedToStageHandler(event)"
		 keyDown="panel_keyDownHandler(event)"
		 title="{Language.lookup(&quot;NewProject&quot;)}">
	<fx:Declarations>
		<s:RadioButtonGroup id="projectType"/>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import Controller.AGORAController;
			import Controller.ArgumentController;
			
			import Model.AGORAModel;
			
			import classes.Language;
			
			import com.adobe.crypto.MD5;
			import com.adobe.serialization.json.JSON;
			
			import mx.collections.ArrayList;
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.managers.FocusManager;
			import mx.managers.PopUpManager;
			import mx.utils.StringUtil;
			
			private var _password:String;
			public function project_add():void{
					AGORAModel.getInstance().agoraMapModel.projectName = projectName.text;
					AGORAModel.getInstance().agoraMapModel.projectType = projectType.selectedValue.valueOf();
					var users:Array = new Array();
					var userDetail:String = new String();
					for(var c:int=0;c<projectUserNames.numChildren;c++){
						var textinp:TextInput = (projectUserNames.getChildAt(c) as HGroup).getChildAt(0) as TextInput;
						var username:String = textinp.text;
						if(username!=null && StringUtil.trim(username)!=""){
							userDetail = StringUtil.trim(username);
							users.push(userDetail);
						}
					}
				
					AGORAModel.getInstance().agoraMapModel.numberUsers = users.length;
					AGORAModel.getInstance().agoraMapModel.projectUsers = users;
					if (currentState != "newInWoA") 
					{
						if (currentState == "newInMyProjects") 
						{
							Controller.AGORAController.getInstance().addProjectToMyProjects();
						}
					}
					else 
					{
						Controller.AGORAController.getInstance().addProjectToWoM();
					}
					//AGORAController.getInstance().fetchDataProjectList();
					//AGORAController.getInstance().fetchDataMyProjects();
			}
			
			protected function panel_creationCompleteHandler(event:FlexEvent):void
			{
				projectName.text=" ";
				projectName.setFocus();
				projectName.text = "";
			}
			
			protected function panel_keyDownHandler(event:KeyboardEvent):void
			{
				if(event.keyCode == Keyboard.ENTER){
					project_add();
				}
			}
			
			
			protected function panel1_addedToStageHandler(event:Event):void
			{
				stage.focus= null;
			}
			
			protected function addUsers():void{
					this.visible=false;
					var loc4:*=null;
					var loc5:*=null;
					var loc1:*=new Array();
					var loc2:*=new String();
					var loc3:*=0;
					while (loc3 < this.projectUserNames.numChildren) 
					{
						if (!((loc5 = (loc4 = (this.projectUserNames.getChildAt(loc3) as spark.components.HGroup).getChildAt(0) as spark.components.TextInput).text) == null) && !(mx.utils.StringUtil.trim(loc5) == "")) 
						{
							loc2 = mx.utils.StringUtil.trim(loc5);
							loc1.push(loc2);
						}
						++loc3;
					}
					Model.AGORAModel.getInstance().agoraMapModel.numberUsers = loc1.length;
					Model.AGORAModel.getInstance().agoraMapModel.projectUsers = loc1;
					Controller.AGORAController.getInstance().addUsers();
					Controller.AGORAController.getInstance().fetchDataMyProjects();
					return;
			}
				
			protected function addNewUserOpt(event:Event):void
			{
				var newTextBox:TextInput = new TextInput();
				newTextBox.width=160;
				var newAddButton:Button = new Button();
				var newRemButton:Button = new Button();
				newAddButton.width=newRemButton.width=30;
				newAddButton.label="+";
				newRemButton.label="-";
				newAddButton.addEventListener(MouseEvent.CLICK,addNewUserOpt);
				newRemButton.addEventListener("click",removeNewUserOpt);
				var newVGrp:HGroup = new HGroup();
				newVGrp.addElement(newTextBox);		
				newVGrp.addElement(newAddButton);
				newVGrp.addElement(newRemButton);
				projectUserNames.addElement(newVGrp);
			}
			
				protected function removeNewUserOpt(event:Event):void
				{
					var clickedbutton:Button = event.target as Button;
					var hgrp:HGroup = clickedbutton.parent as HGroup;
					if(hgrp.id == "firstUserName"){
						return;
					}
					var addButton:Button = hgrp.getChildAt(1) as Button;
					clickedbutton.removeEventListener(MouseEvent.CLICK,removeNewUserOpt);
					addButton.removeEventListener(MouseEvent.CLICK,addNewUserOpt);
					(hgrp).removeAllElements();	
					projectUserNames.removeElement(hgrp);		
				}
			
			
		]]>
	</fx:Script>
	<s:states>
		<s:State name = "addUsers"/>
		<s:State name = "newInMyProjects"/>
		<s:State name = "newInWoA"/>
	</s:states>
	<mx:Form id="form" verticalGap="15">
		<mx:FormItem tabIndex="1" label="{Language.lookup(&quot;ProjectName&quot;)}" required="true" includeIn="newInMyProjects,newInWoA">			
			<s:TextInput id="projectName" width="200" excludeFrom="addUsers"/>
		</mx:FormItem>
		<mx:FormItem tabIndex="2" required="true" label="{Language.lookup(&quot;ProjectType&quot;)}" includeIn="newInMyProjects,newInWoA">
			<s:HGroup>	
				<s:RadioButton label="{Language.lookup('ProjectTypeCollaborative')}" value="0" selected="true" group="{projectType}" enabled="false"/>		
				<s:RadioButton label="{Language.lookup('ProjectTypeAdversarial')}" value="1" group="{projectType}"/>		
			</s:HGroup>
		</mx:FormItem>
		<mx:FormItem tabIndex="3" label="{Language.lookup(&quot;AddProjectMembers&quot;)}" verticalGap="12">	
			<s:BorderContainer borderColor="#B6BDC6" borderWeight="2" cornerRadius="5">
			<s:Scroller height="225" width="325">
			<s:VGroup id="projectUserNames" paddingTop="10" paddingBottom="10" paddingLeft="10">
			<s:HGroup id="firstUserName">
			<s:TextInput width="160">
			</s:TextInput>
			<s:Button label="+" width="30" click="addNewUserOpt(event);">				
			</s:Button>			
			</s:HGroup>
			<s:HGroup>
				<s:TextInput width="160">
				</s:TextInput>
				<s:Button label="+" width="30" click="addNewUserOpt(event);">				
				</s:Button>
				<s:Button label="-" width="30" click="removeNewUserOpt(event);">				
				</s:Button>
			</s:HGroup>
			<s:HGroup>
				<s:TextInput width="160">
				</s:TextInput>
				<s:Button label="+" width="30" click="addNewUserOpt(event);">				
				</s:Button>
				<s:Button label="-" width="30" click="removeNewUserOpt(event);">				
				</s:Button>
			</s:HGroup>
			<s:HGroup>
				<s:TextInput width="160">
				</s:TextInput>
				<s:Button label="+" width="30" click="addNewUserOpt(event);">				
				</s:Button>
				<s:Button label="-" width="30" click="removeNewUserOpt(event);">				
				</s:Button>
			</s:HGroup>
			<s:HGroup>
				<s:TextInput width="160">
				</s:TextInput>
				<s:Button label="+" width="30" click="addNewUserOpt(event);">				
				</s:Button>
				<s:Button label="-" width="30" click="removeNewUserOpt(event);">				
				</s:Button>
			</s:HGroup>
			</s:VGroup>
			</s:Scroller>
			</s:BorderContainer>
		</mx:FormItem>
		<mx:FormItem>
			<s:HGroup>
				<s:Button label="{Language.lookup('OK')}" tabIndex="4" id="OK_btn" click.addUsers="addUsers()" click="project_add();">		
				</s:Button>
				<s:Button label="{Language.lookup('Back')}" tabIndex="5" id="CANECL_btn" click="this.visible=false;">		
				</s:Button>
			</s:HGroup>		
		</mx:FormItem>		
	</mx:Form>	
</s:Panel>
