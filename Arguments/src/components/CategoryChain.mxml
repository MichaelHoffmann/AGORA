<?xml version="1.0" encoding="utf-8"?>
<!--
-	Visual element that adds the category hierarchy to the right side of the screen. The buttons allow the user to
-	click on a button a take themselves to that category. Also removes elements from the category chain as necessary.
-
-	Has two functions: removeCategory and addCategory. See the documentation of those two functions for more info
-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  width="278"
		  preinitialize="preInit();">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import Controller.AGORAController;
			
			import Model.*;
			
			import classes.Language;
			
			import mx.collections.ArrayList;
			import mx.controls.Alert;
			import mx.controls.Label;
			import mx.core.FlexGlobals;
			import mx.core.IVisualElement;
			import mx.core.UIComponent;
			import mx.messaging.AbstractConsumer;
			
			import spark.components.Button;
			import spark.components.HGroup;
			private var model:ChainModel;
			private var categoryChain:ArrayList =new ArrayList();
			
			public function update():void{
				actualHistory.removeAllElements();
				var subprojects:XMLList =model.historyXML.path;

				var button:Button = new Button;
				var usm:UserSessionModel=AGORAModel.getInstance().userSessionModel;
				
				button.width = 100;
				button.name = "-1"; //The ID (unique DB identifier) of the category
				button.label = "Top Level" ; //The title of the category (e.g. Philosophy, Biology, or Projects)
				button.setStyle("chromeColor", 0xA0CADB);
				actualHistory.addElement(button);
				button.addEventListener("click",navigateToWOA);
				var button:Button = new Button;				
				button.width = 100;
				button.name = subprojects.@pid; //The ID (unique DB identifier) of the category
				button.label = subprojects.@pname ; //The title of the category (e.g. Philosophy, Biology, or Projects)
				button.setStyle("chromeColor", 0xA0CADB);
				actualHistory.addElement(button);
				button.addEventListener("click",navigateToWOA);
				for each(var project:XML in subprojects.child){
					trace("Adding buttons");
					var button:Button = new Button;
					button.width = 100;
					button.name = project.@pid; //The ID (unique DB identifier) of the category
					button.label = project.@pname ; //The title of the category (e.g. Philosophy, Biology, or Projects)
					button.setStyle("chromeColor", 0xA0CADB);
					actualHistory.addElement(button);
					button.addEventListener("click",navigateToWOA);
					categoryChain.addItem(project.@pid);
				}
					
					
					
			}
			private function preInit():void{
				model=AGORAModel.getInstance().chainModel;
				actualHistory.removeAllElements();
				topButton();

			}
			public function topButton():void{
				actualHistory.removeAllElements();
				var topButton:Button= new Button();
				topButton.width = 100;
				topButton.setStyle("chromeColor", 0xA0CADB);
				topButton.label="Top Level";
				topButton.name ="-1";
				actualHistory.addElement(topButton);		
			}

			private function navigateToWOA(e:Event):void{
				AGORAController.getInstance().setSelectedTab(0);
				AGORAController.getInstance().hideMap();
				AGORAModel.getInstance().userSessionModel.selectedWoAProjID=parseInt(e.target.name);
				if(e.target.label!=Language.lookup("CategoryTopLevel")){
					AGORAController.getInstance().fetchDataChildCategory(e.target.label,e.target.name);
					AGORAController.getInstance().fetchDataMyProjects();
				}else{
					topButton();
					AGORAController.getInstance().fetchDataCategory();
				}
			}
			public function back():Array{
				var temp=new Array();
				temp.push(-1,-1);
				if(actualHistory.numElements>1){
					temp=new Array();

					temp.push((actualHistory.getElementAt(actualHistory.numElements-2) as Button).label);
					temp.push((actualHistory.getElementAt(actualHistory.numElements-2) as Button).name);
				}
				return temp;
			}
		]]>
	</fx:Script>
		<s:TileGroup id="actualHistory" width = "100%" paddingBottom="0" paddingLeft="0" paddingRight="0" paddingTop="0">
		</s:TileGroup>

</s:Group>
