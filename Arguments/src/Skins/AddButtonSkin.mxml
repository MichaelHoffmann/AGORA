<?xml version="1.0" encoding="utf-8"?>

<!--

    ADOBE SYSTEMS INCORPORATED
    Copyright 2008 Adobe Systems Incorporated
    All Rights Reserved.

    NOTICE: Adobe permits you to use, modify, and distribute this file
    in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for the Spark Button component.  

       @see spark.components.Button
        
      @langversion 3.0
      @playerversion Flash 10
      @playerversion AIR 1.5
      @productversion Flex 4
-->
<s:SparkButtonSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
				   minWidth="25" minHeight="25"
				   alpha.disabled="0.5"
				   width="25" height="25" fontWeight.up="bold">
     
    <fx:Metadata>
        <![CDATA[ 
        /** 
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("spark.components.Button")]
        ]]>
    </fx:Metadata>
    
    <fx:Script fb:purpose="styling">
        <![CDATA[         
            import spark.components.Group;
            /* Define the skin elements that should not be colorized. 
            For button, the graphics are colorized but the label is not. */
            static private const exclusions:Array = ["labelDisplay"];
            
            /** 
             * @private
             */     
            override public function get colorizeExclusions():Array {return exclusions;}
            
            /**
             * @private
             */
            override protected function initializationComplete():void
            {
                useChromeColor = true;
                super.initializationComplete();
            }  
            
            /**
             *  @private
             */
            override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number) : void
            {
                var cr:Number = getStyle("cornerRadius");
                
                
                
                super.updateDisplayList(unscaledWidth, unscaledHeight);
            }
            
            private var cornerRadius:Number = 2;
                                 
        ]]>        
    </fx:Script>
        
    <!-- states -->
    <s:states>
        <s:State name="up" />
        <s:State name="over" />
        <s:State name="down" />
        <s:State name="disabled" />
    </s:states>
    
    <!-- layer 1: shadow -->
    <!--- @private -->
    <s:Ellipse id="shadow" left="-1" right="-1" top="-1" bottom="-1" >
    </s:Ellipse>
    
    <!-- layer 2: fill -->
    <!--- @private -->
    <s:Ellipse id="fill" left="1" right="1" top="1" bottom="1">
        <s:fill>
			<s:SolidColor color="#ffffff" alpha = "1"/>
        </s:fill>
    </s:Ellipse>

    <!-- layer 3: fill lowlight -->
    <!--- @private -->
    <s:Ellipse id="lowlight" left="1" right="1" top="1" bottom="1">
    </s:Ellipse>
    
    <!-- layer 4: fill highlight -->
    <!--- @private -->
    <s:Ellipse id="highlight" left="1" right="1" top="1" bottom="1">
        <s:fill>
			<s:SolidColor color="#29ABE2" alpha = "1"/>
        </s:fill>
    </s:Ellipse>
    
    <!-- layer 5: highlight stroke (all states except down) -->
    <!--- @private -->
    <s:Ellipse id="highlightStroke" left="1" right="1" top="1" bottom="1"  excludeFrom="down">
		<s:stroke>
			<s:SolidColorStroke color="#29ABE2" alpha = "1"/>
		</s:stroke>
    </s:Ellipse>
    
    <!-- layer 6: highlight stroke (down state only) -->
    <!--- @private -->
    <s:Ellipse id="hldownstroke1" left="1" right="1" top="1" bottom="1"  includeIn="down">
        <s:stroke>
			<s:SolidColorStroke color="#29ABE2" alpha = "1"/>
        </s:stroke>
    </s:Ellipse>
    <!--- @private -->
    <s:Ellipse id="hldownstroke2" left="2" right="2" top="2" bottom="2"  includeIn="down">
		<s:stroke>
			<s:SolidColorStroke color="#29ABE2" alpha = "1"/>
		</s:stroke>
    </s:Ellipse>

    <!-- layer 7: border - put on top of the fill so it doesn't disappear when scale is less than 1 -->
    <!--- @private -->
	<s:Ellipse id="border" left = "0" right = "0" top = "0" bottom ="0">
		<s:fill>
			<s:SolidColor color="#29ABE2" alpha = "1"/>
		</s:fill>
	</s:Ellipse>
    
    <!-- layer 8: text -->
    <!--- @copy spark.components.supportClasses.ButtonBase#labelDisplay  -->
    <s:Label id="labelDisplay" fontSize="30" fontWeight="bold" horizontalCenter="0"
			 maxDisplayedLines="1" text="+" textAlign="center" verticalAlign="middle"
			 verticalCenter="3" color = "white"
			 fontWeight.up="bold" >
    </s:Label>
    
</s:SparkButtonSkin>
